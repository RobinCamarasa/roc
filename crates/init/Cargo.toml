[package]
name = "roc_init"
description = "Generate a project based on a platform init.roc file."

authors.workspace = true
edition.workspace = true
license.workspace = true
version.workspace = true

[dependencies]
roc_build = { path = "../compiler/build" }
roc_builtins = { path = "../compiler/builtins" }
roc_can = { path = "../compiler/can" }
roc_collections = { path = "../compiler/collections" }
roc_error_macros = { path = "../error_macros" }
roc_gen_llvm = { path = "../compiler/gen_llvm" }
roc_linker = { path = "../linker" }
roc_load = { path = "../compiler/load" }
roc_module = { path = "../compiler/module" }
roc_mono = { path = "../compiler/mono" }
roc_packaging = { path = "../packaging" }
roc_reporting = { path = "../reporting" }
roc_std = { path = "../roc_std" }
roc_target = { path = "../compiler/roc_target" }
roc_tracing = { path = "../tracing" }
roc_types = { path = "../compiler/types" }

bumpalo.workspace = true
fnv.workspace = true
indexmap.workspace = true
libc.workspace = true
libloading.workspace = true
strum.workspace = true
strum_macros.workspace = true
target-lexicon.workspace = true
tempfile.workspace = true

[dev-dependencies]
cli_utils = { path = "../cli_utils" }
dircpy.workspace = true

indoc.workspace = true
pretty_assertions.workspace = true
